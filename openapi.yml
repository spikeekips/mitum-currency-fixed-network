openapi: 3.0.1

info:
  title: mitum-currency - digest API
  description: >-
    This is API description of digest service of mitum-currency.
  contact:
    name: Spike^ekipS
    url: https://github.com/spikeekips/mitum-currency
    email: spikeekips@gmail.com
  license:
    name: GPL-3.0
    url: https://github.com/spikeekips/mitum-currency/blob/master/LICENSE
  version: 0.0.1

externalDocs:
  description: Find out more about mitum-currency
  url: 'https://github.com/spikeekips/mitum-currency'

servers:
- url: https://testnet.protocon.io

tags:
- name: node-info
  description: node information of mitum-currency node
- name: block
  description: block information
- name: account
  description: account state and it's operations
- name: builder
  description: build operation and broadcast it
- name: currency
  description: currency information

paths:
  /:
    get:
      tags:
      - node-info
      summary: Node information
      operationId: node-info
      responses:
        500:
          description: problems in processing.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        200:
          description: node info
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/NodeInfoHAL'
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Rate-Remaining:
              description: remains request count
              schema:
                type: integer
                format: int32
            X-Rate-Reset:
              description: timestamp to reset limit
              schema:
                type: integer
                format: int64

  /block/{height}:
    get:
      tags:
      - block
      summary: 1. Block by block height
      description: >-
        Basically the hal document of response does include the links for components of *block* like *manifest*.
      operationId: block-by-height
      parameters:
        - name: height
          in: path
          description: block height
          required: true
          schema:
            $ref: '#/components/schemas/Height'
      responses:
        500:
          description: problems in processing.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        200:
          description: hal document of block by block height
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/BlockHeightHAL'
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Rate-Remaining:
              description: remains request count
              schema:
                type: integer
                format: int32
            X-Rate-Reset:
              description: timestamp to reset limit
              schema:
                type: integer
                format: int64

  /block/{block_hash}:
    get:
      tags:
      - block
      summary: 2. Block by block hash
      description: >-
        *block* by *hash*. The basic structure of it is same with `/block/{height}`.
      operationId: block-by-hash
      parameters:
        - name: block_hash
          in: path
          description: block hash
          required: true
          schema:
            type: string
      responses:
        500:
          description: problems in processing.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        200:
          description: hal document of block
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/BlockHAL'
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Rate-Remaining:
              description: remains request count
              schema:
                type: integer
                format: int32
            X-Rate-Reset:
              description: timestamp to reset limit
              schema:
                type: integer
                format: int64

  /block/{height}/manifest:
    get:
      tags:
      - block
      summary: 3. Block manifest by block height
      description: >-
        *block* *manifest* by height.
      operationId: manifest-by-height
      parameters:
        - name: height
          in: path
          description: block height
          required: true
          schema:
            $ref: '#/components/schemas/Height'
      responses:
        500:
          description: problems in processing.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        404:
          description: not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        200:
          description: hal document of block manifest by block height
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ManifestHAL'
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Rate-Remaining:
              description: remains request count
              schema:
                type: integer
                format: int32
            X-Rate-Reset:
              description: timestamp to reset limit
              schema:
                type: integer
                format: int64

  /block/{block_hash}/manifest:
    get:
      tags:
      - block
      summary: 4. Block manifest by block hash
      description: >-
        *block* *manifest* by hash.
      operationId: manifest-by-hash
      parameters:
        - name: block_hash
          in: path
          description: block hash
          required: true
          schema:
            type: string
      responses:
        500:
          description: problems in processing.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        404:
          description: not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        200:
          description: hal document of block manifest by block hash
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ManifestHAL'
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Rate-Remaining:
              description: remains request count
              schema:
                type: integer
                format: int32
            X-Rate-Reset:
              description: timestamp to reset limit
              schema:
                type: integer
                format: int64

  /block/operation/{operation_fact_hash}:
    get:
      tags:
      - block
      summary: 5. Operation by it's fact hash.
      description: >-
        operation by it's **fact** *hash*, not it's own *hash*.
      operationId: operation
      parameters:
        - name: operation_fact_hash
          in: path
          description: >-
              *fact* *hash* of operation.
          required: true
          schema:
            type: string
      responses:
        500:
          description: problems in processing.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        404:
          description: not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        200:
          description: hal document of operation
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OperationHAL'
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Rate-Remaining:
              description: remains request count
              schema:
                type: integer
                format: int32
            X-Rate-Reset:
              description: timestamp to reset limit
              schema:
                type: integer
                format: int64

  /block/manifests:
    get:
      tags:
      - block
      summary: 6. All the manifest
      operationId: manifests
      parameters:
        - name: offset
          in: query
          schema:
            type: string
            example: "2"
          description: >-
            *manifest*s after *offset*, usually it is block *height*.
        - name: reverse
          in: query
          schema:
            type: boolean
            example: false
            default: false
          description: >-
            *manifest*s by reverse order.
      responses:
        500:
          description: problems in processing.
          content:
            application/problem+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Problem'
                  - type: object
                    properties:
                      title:
                        type: string
                        example: "...."
                      detail:
                        type: string
                        example: "...."
        404:
          description: no more manifests
          content:
            application/problem+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Problem'
                  - type: object
                    properties:
                      title:
                        type: string
                        example: "manifests not found"
                      detail:
                        type: string
                        example: "...."
        200:
          description: hal document of manifests
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ManifestsHAL'
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Rate-Remaining:
              description: remains request count
              schema:
                type: integer
                format: int32
            X-Rate-Reset:
              description: timestamp to reset limit
              schema:
                type: integer
                format: int64

  /block/{height}/operations:
    get:
      tags:
      - block
      summary: 7. All the operations of block
      operationId: operations-by-height
      parameters:
        - name: height
          in: path
          description: block height
          required: true
          schema:
            $ref: '#/components/schemas/Height'
        - name: offset
          in: query
          schema:
            type: string
            example: "2,0"
          description: >-
            *operation*s after *offset*.
        - name: reverse
          in: query
          schema:
            type: boolean
            example: false
            default: false
          description: >-
            *operation*s by reverse order.
      responses:
        500:
          description: problems in processing.
          content:
            application/problem+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Problem'
                  - type: object
                    properties:
                      title:
                        type: string
                        example: "...."
                      detail:
                        type: string
                        example: "...."
        404:
          description: no more operations
          content:
            application/problem+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Problem'
                  - type: object
                    properties:
                      title:
                        type: string
                        example: "operations not found"
                      detail:
                        type: string
                        example: "...."
        200:
          description: hal document of operations
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OperationsByHeightHAL'
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Rate-Remaining:
              description: remains request count
              schema:
                type: integer
                format: int32
            X-Rate-Reset:
              description: timestamp to reset limit
              schema:
                type: integer
                format: int64

  /block/operations:
    get:
      tags:
      - block
      summary: 8. All the operations
      operationId: operations
      parameters:
        - name: offset
          in: query
          schema:
            type: string
            example: "2,0"
          description: >-
            *operation*s after *offset*.
        - name: reverse
          in: query
          schema:
            type: boolean
            example: false
            default: false
          description: >-
            *operation*s by reverse order.
      responses:
        500:
          description: problems in processing.
          content:
            application/problem+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Problem'
                  - type: object
                    properties:
                      title:
                        type: string
                        example: "...."
                      detail:
                        type: string
                        example: "...."
        404:
          description: no more operations
          content:
            application/problem+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Problem'
                  - type: object
                    properties:
                      title:
                        type: string
                        example: "operations not found"
                      detail:
                        type: string
                        example: "...."
        200:
          description: hal document of operations
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OperationsHAL'
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Rate-Remaining:
              description: remains request count
              schema:
                type: integer
                format: int32
            X-Rate-Reset:
              description: timestamp to reset limit
              schema:
                type: integer
                format: int64

  /account/{address}:
    get:
      tags:
      - account
      summary: 1. The latest state of account
      description: >-
        The latest state of account. It contains the *keys* of account and it's *balance*.
      operationId: account
      parameters:
        - name: address
          in: path
          description: >
            *address* of account.
          required: true
          schema:
            $ref: '#/components/schemas/AccountAddress'
      responses:
        500:
          description: problems in processing.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        404:
          description: not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        200:
          description: hal document of account
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AccountHAL'
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Rate-Remaining:
              description: remains request count
              schema:
                type: integer
                format: int32
            X-Rate-Reset:
              description: timestamp to reset limit
              schema:
                type: integer
                format: int64

  /account/{address}/operations:
    get:
      tags:
      - account
      summary: 2. Operations, which are related with the account
      description: >-
        Operations, which are related with the account.
      operationId: account-operations
      parameters:
        - name: address
          in: path
          description: >
            *address* of account.
          required: true
          schema:
            $ref: '#/components/schemas/AccountAddress'
        - name: offset
          in: query
          schema:
            type: string
            example: "2,0"
          description: >-
            *operation*s after *offset*.
        - name: reverse
          in: query
          schema:
            type: boolean
            example: false
            default: false
          description: >-
            *operation*s by reverse order.
      responses:
        500:
          description: problems in processing.
          content:
            application/problem+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Problem'
                  - type: object
                    properties:
                      title:
                        type: string
                        example: "...."
                      detail:
                        type: string
                        example: "...."
        404:
          description: no more operations
          content:
            application/problem+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Problem'
                  - type: object
                    properties:
                      title:
                        type: string
                        example: "operations not found"
                      detail:
                        type: string
                        example: "...."
        200:
          description: hal document of operations
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AccountOperationsHAL'
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Rate-Remaining:
              description: remains request count
              schema:
                type: integer
                format: int32
            X-Rate-Reset:
              description: timestamp to reset limit
              schema:
                type: integer
                format: int64

  /builder/operation:
    get:
      tags:
      - builder
      summary: 1. Operation types to build.
      description: >-
        It returns operation types available with API.
      operationId: operation-builder
      responses:
        500:
          description: problems in processing.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        200:
          description: hal document of operation
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OperationBuilderHAL'
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Rate-Remaining:
              description: remains request count
              schema:
                type: integer
                format: int32
            X-Rate-Reset:
              description: timestamp to reset limit
              schema:
                type: integer
                format: int64

  /builder/operation/fact/template/{fact}:
    get:
      tags:
      - builder
      summary: 2. Fact template to build operations.
      description: >-
        It returns fact template for `/builder/operation/fact`.
      operationId: operation-builder-fact-template
      parameters:
        - name: fact
          in: path
          description: >-
              *fact* name.
          required: true
          schema:
            type: string
            enum:
            - create-accounts
            - key-updater
            - transfers
            - currency-register
            - currency-policy-updater
      responses:
        500:
          description: problems in processing.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        404:
          description: template not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        200:
          description: hal document of operation fact template
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OperationTemplateCreateAccountsFactHAL'
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Rate-Remaining:
              description: remains request count
              schema:
                type: integer
                format: int32
            X-Rate-Reset:
              description: timestamp to reset limit
              schema:
                type: integer
                format: int64

  /builder/operation/fact:
    post:
      tags:
      - builder
      summary: 3. Build operation messages by fact.
      description: >-
        It receives the edited fact message, not template HAL itself.
        Then it returns operation message containing fact message.
        Get valid fact templates from `/builder/operation/fact/template/{fact}`.
      operationId: operation-fact-builder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountsFact'
      responses:
        500:
          description: problems in processing.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        400:
          description: problems in request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        200:
          description: hal document of operation template with signed fact.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OperationTemplateCreateAccountsHAL'

  /builder/operation/sign:
    post:
      tags:
      - builder
      summary: 4. Sign operation messages.
      description: >-
        It receives the edited operation message, not template HAL itself.
        Then it returns operation message with operation hash.
        Get valid operation messages from `/builder/operation/fact`.
      operationId: operation-fact-builder-sign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccounts'
      responses:
        500:
          description: problems in processing.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        400:
          description: problems in request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        200:
          description: hal document of operation template with signed fact.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OperationTemplateCreateAccountsSignHAL'

  /builder/send:
    post:
      tags:
      - builder
      summary: 5. Broadcast operation and seal messages to network.
      description: >-
        It receives the operation or seal and broadcasts to the network. The signer of seal(not *operation*) will be digest node itself. Such as,

        - If request body is *operation*, new seal will be created with the given *operation* and the new seal will be signed by digest node.

        - If request body is *seal*, it will be signed by digest node.
      operationId: operation-builder-send
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Seal'
                - $ref: '#/components/schemas/CreateAccountsSend'
                - $ref: '#/components/schemas/KeyUpdaterSend'
                - $ref: '#/components/schemas/TransfersSend'
                - $ref: '#/components/schemas/CurrencyRegisterNil'
                - $ref: '#/components/schemas/CurrencyRegisterFixed'
                - $ref: '#/components/schemas/CurrencyRegisterRatio'
                - $ref: '#/components/schemas/CurrencyPolicyUpdaterNil'
                - $ref: '#/components/schemas/CurrencyPolicyUpdaterFixed'
                - $ref: '#/components/schemas/CurrencyPolicyUpdaterRatio'
      responses:
        500:
          description: problems in processing.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        400:
          description: problems in request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        200:
          description: hal document of operation template with signed fact.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SealHAL'

  /currency:
    get:
      tags:
      - currency
      summary: 1. Currencies information
      operationId: currencies
      responses:
        500:
          description: problems in processing.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        200:
          description: hal document of currencies
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CurrenciesHAL'
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Rate-Remaining:
              description: remains request count
              schema:
                type: integer
                format: int32
            X-Rate-Reset:
              description: timestamp to reset limit
              schema:
                type: integer
                format: int64

  /currency/{currency_id}:
    get:
      tags:
      - currency
      summary: 2. Currency information
      operationId: currency
      parameters:
        - name: currency_id
          in: path
          description: currency unique id(or name)
          required: true
          schema:
            $ref: '#/components/schemas/CurrencyID'
      responses:
        500:
          description: problems in processing.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        200:
          description: hal document of currency of *currency_id*
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CurrencyHAL'
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Rate-Remaining:
              description: remains request count
              schema:
                type: integer
                format: int32
            X-Rate-Reset:
              description: timestamp to reset limit
              schema:
                type: integer
                format: int64

components:
  schemas:
    Hint:
      type: string
      example: mitum-currency-node-info-v0.0.1

    Problem:
      type: object
      required:
      - _hint
      - title
      - type
      - detail
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              example: mitum-currency-problem-v0.0.1
              default: mitum-currency-problem-v0.0.1
        title:
          type: string
          example: "failed to sign"
        type:
          type: string
          example: "https://github.com/spikeekips/mitum-currency/problems/others"
        detail:
          type: string
          example: "invalid privatekey"

    Seal:
      type: object
      required:
        - _hint
        - hash
        - body_hash
        - signer
        - signature
        - signed_at
        - operations
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              example: seal-v0.0.1
              default: seal-v0.0.1
        hash:
          type: string
          format: hash
          example: 3TK9nR3hEcZ4Yfk9amMzU77oza63dBDdCuayWaGCWAT7
        body_hash:
          type: string
          format: hash
          example: CAj5uMXCkMHhc7cmmYxGMuQaFJVdR551xNXTkMtTL5CD
        signer:
          type: string
          example: qcN6bdUDFs1nYWEVL41vNB5795UbxkHRmKNY35xVR3YM:btc-pub-v0.0.1
        signature:
          type: string
          format: signature
          example: AN1rKvtgdt6eRFWv7Kmd2EX5UyCPqBjA3S4uecNLuU2GiMtPpnr3BMzdHzLwmYzvRsX7riLLECE75Pa5tt6E4T8fcztew5iGK
        signed_at:
          type: string
          format: date-time
          example: "2021-08-31T04:35:42.696552991Z"
        operations:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Operation'
              - properties:
                  _hint:
                    allOf:
                      - $ref: '#/components/schemas/Hint'
                      - type: string
                        example: mitum-currency-create-accounts-operation-v0.0.1
                  hash:
                    type: string
                    format: hash
                    example: 7afVZcu9MQc2yXdN6soWYy7dDqoqhiT2LYWWQ7j6ak1E
                  fact:
                    $ref: '#/components/schemas/CreateAccountsFactSend'
                  fact_signs:
                    type: array
                    items:
                      $ref: '#/components/schemas/FactSignSeal'
                  memo:
                    type: string
                    example: example

    FactSignSeal:
      type: object
      required:
      - _hint
      - signer
      - signature
      - signed_at
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              example: base-fact-sign-v0.0.1
              default: base-fact-sign-v0.0.1
        signer:
          description: >-
            *publickey*, which signs the operation
          type: string
          format: publickey
          example: qcN6bdUDFs1nYWEVL41vNB5795UbxkHRmKNY35xVR3YM:btc-pub-v0.0.1
        signature:
          description: signature, created by *signer*. Usually it is encoded thru *base58*.
          type: string
          format: signature
          example: 381yXZUEQDYWtpWmz5UoBF6Qi7M2Ae96tn3a8tsrJGgdMsPHsvSjoLAgoiLfV32B947Z7eNmH6NyPkLJdGf284f9SwD2MxrG
        signed_at:
          description: time to be signed
          type: string
          format: date-time
          example: "2021-08-31T04:35:42.696524942Z"      

    CreateAccountsFactSend:
      allOf:
        - $ref: '#/components/schemas/BaseFact'
        - type: object
          required:
          - sender
          - items
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-create-accounts-operation-fact-v0.0.1
                  default: mitum-currency-create-accounts-operation-fact-v0.0.1
            hash:
              description: >-
                The value of hash will be generated automatically by builder. *Don't need to edit*.
              type: string
              format: hash
              example: EZNFttdY23Dk1ggcD8LzrQ6pM74oPvoNdjbdrLpYr5RH
            token:
              description: >-
                Replace your own token. *token* value should be encoded by base64.
              type: string
              format: bytes
              example: MjAyMS0wOC0zMVQwNDozNTo0Mi42OTYyNDYxMTRa
            sender:
              allOf:
                - $ref: '#/components/schemas/AccountAddress'
                - type: string
                  example: H6cTzwGDPk1CcPH7uHHrfivAeHBKgLrS81JDvBfPXWhD:mca-v0.0.1
            items:
              type: array
              items:
                type: object
                required:
                - _hint
                - keys
                - amount
                properties:
                  _hint:
                    allOf:
                      - $ref: '#/components/schemas/Hint'
                      - type: string
                        example: mitum-currency-create-accounts-single-amount-v0.0.1
                  keys:
                    $ref: '#/components/schemas/AccountKeysSeal'
                  amounts:
                    type: array
                    items:
                      description: The initial balance of account.
                      allOf:
                        - $ref: '#/components/schemas/AmountSeal'    

    AmountSeal:
      type: object
      required:
      - _hint
      - hash
      - amount
      - currency
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-amount-v0.0.1
              example: mitum-currency-amount-v0.0.1
        amount:
          type: string
          description: amount
          example: "1000"
          default: "1000"
        currency:
          $ref: '#/components/schemas/CurrencyID'      

    AccountKeysSeal:
      type: object
      required:
      - _hint
      - keys
      - threshold
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-keys-v0.0.1
              example: mitum-currency-keys-v0.0.1
        hash:
          type: string
          format: hash
          example: 4roMiuuT2oWZfi8ycuytjcAPCj7LwsYbdJ6HpYmXxdym
        keys:
          type: array
          items:
            $ref: '#/components/schemas/AccountKeySeal'
        threshold:
          description: >-
            *threshold* should be `> 0` and `<= 100`.
          type: integer
          format: int32
          example: 100 

    AccountKeySeal:
      type: object
      required:
      - _hint
      - key
      - weight
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-key-v0.0.1
              example: mitum-currency-key-v0.0.1
        key:
          description: >-
            *publickey*
          type: string
          format: publickey
          example: 29sLdVLiFHreGUEXUvMi4nKddVBp9C1BeyHSfgoWuzw1W:btc-pub-v0.0.1
        weight:
          description: >-
            *weight* should be `> 1` and  `<= 100`.
          type: integer
          format: int32
          example: 100      

    HAL:
      type: object
      required:
      - _hint
      - hint
      - _links
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              example: mitum-currency-hal-v0.0.1
              default: mitum-currency-hal-v0.0.1
        hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              example: " "
              default: " "
        _links:
          type: object
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/HALLink'
                - type: object
                  properties:
                    href:
                      type: string
                      default: /
                      example: /
                    templated:
                      type: boolean
                      default: false
                      example: false

    HALLink:
      type: object
      required:
        - href
      properties:
        href:
          type: string

    NodeInfoHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-node-info-v0.0.1
                  default: mitum-currency-node-info-v0.0.1
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  default: mitum-currency-hal-v0.0.1
                  example: mitum-currency-hal-v0.0.1
            _embedded:
              $ref: '#/components/schemas/NodeInfo'
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /
                block:prev:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/243
                block:next:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/245
                block:current:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/244
                block:current-manifest:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/244/manifest
                currency:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /currency
                currency:{currencyid}:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /currency/{currencyid:.*}
                        templated:
                          type: boolean
                          default: true
                          example: true
                block:{height}:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          default: /block/{height:[0-9]+}
                          example: /block/{height:[0-9]+}
                        templated:
                          type: boolean
                          default: true
                          example: true
                block:manifest:{height}:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          default: /block/{height:[0-9]+}/manifest
                          example: /block/{height:[0-9]+}/manifest
                        templated:
                          type: boolean
                          default: true
                          example: true
                block:{hash}:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          default: /block/{hash:(?i)[0-9a-z][0-9a-z]+}
                          example: /block/{hash:(?i)[0-9a-z][0-9a-z]+}
                        templated:
                          type: boolean
                          default: true
                          example: true
                block:manifest:{hash}:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          default: /block/{hash:(?i)[0-9a-z][0-9a-z]+}/manifest
                          example: /block/{hash:(?i)[0-9a-z][0-9a-z]+}/manifest
                        templated:
                          type: boolean
                          default: true
                          example: true

    BlockHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/CHboAfLXbm7kFsr2JhdrJb2Qg4WL96YmK8E6t1NPABeB
                manifest:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href: 
                          type: string
                          example: /block/CHboAfLXbm7kFsr2JhdrJb2Qg4WL96YmK8E6t1NPABeB/manifest
                block:{height}:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/{height:[0-9]+}
                        templated:
                          type: boolean
                          default: true
                          example: true
                manifest:{height}:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/{height:[0-9]+}/manifest
                        templated:
                          type: boolean
                          default: true
                          example: true
                block:{hash}:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/{hash:(?i)[0-9a-z][0-9a-z]+}
                        templated:
                          type: boolean
                          default: true
                          example: true
                manifest:{hash}:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/{hash:(?i)[0-9a-z][0-9a-z]+}/manifest
                        templated:
                          type: boolean
                          default: true
                          example: true

    BlockHeightHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/3
                prev:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/2
                next:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/4
                current:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/3
                current-manifest:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/3/manifest
                block:{height}:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/{height:[0-9]+}
                        templated:
                          type: boolean
                          default: true
                          example: true
                manifest:{height}:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/{height:[0-9]+}/manifest
                        templated:
                          type: boolean
                          default: true
                          example: true
                block:{hash}:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/{hash:(?i)[0-9a-z][0-9a-z]+}
                        templated:
                          type: boolean
                          default: true
                          example: true
                manifest:{hash}:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/{hash:(?i)[0-9a-z][0-9a-z]+}/manifest
                        templated:
                          type: boolean
                          default: true
                          example: true
    
    Node:
      type: object
      required:
        - _hint
        - address
        - publickey
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              example: base-node-v0.0.1
              default: base-node-v0.0.1
        address:
          $ref: '#/components/schemas/NodeAddress'
        publickey:
          type: string
          format: publickey
          example: rqvjCvX8LCKBPSZA8KoqhLEdzVtGNtSrwvuPuL5rNb6y:btc-pub-v0.0.1

    Suffrage:
      type: object
      required:
        - address
        - publickey
        - url
        - insecure
      properties:
        address:
          allOf:
            - $ref: '#components/schemas/NodeAddress'
            - type: string
              default: n0:sa-v0.0.1
              example: n0:sa-v0.0.1
        publickey:
          type: string
          default: nrFMoGxDzyQhQB72K3zRzv11xcZz9tQY1XpaYr3Afo1L:btc-pub-v0.0.1
          example: nrFMoGxDzyQhQB72K3zRzv11xcZz9tQY1XpaYr3Afo1L:btc-pub-v0.0.1
        url:
          type: string
          default: https://mitum-currency-0:54330
          example: https://mitum-currency-0:54330
        insecure:
          type: boolean
          default: true
          example: true


    NodeInfo:
      type: object
      required:
      - _hint
      - node
      - network_id
      - state
      - last_block
      - version
      - url
      - policy
      - suffrage
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-node-info-v0.0.1
              example: mitum-currency-node-info-v0.0.1
        node:
          $ref: '#/components/schemas/Node'
        network_id:
          type: string
          example: "bWl0dW0="
        state:
          type: string
          example: CONSENSUS
          default: BOOTING
          enum:
          - STOPPED
          - BOOTING
          - CONSENSUS
          - JOINING
          - SYNCING
          - BROKEN
        last_block:
          $ref: '#/components/schemas/Manifest'
        version:
          type: string
          example: v0.0.1
        url:
          type: string
          description: node published url
          example: https://mitum-currency-1:54330
        policy:
          type: object
          properties:
            timeout_waiting_proposal:
              type: integer
              description: timeout for waiting proposal
              example: 5000000000
            network_connection_timeout:
              type: integer
              description: timeout for network connection
              example: 3000000000
            suffrage:
              type: string
              description: suffrage
              example: "{\"type\":\"\",\"cache_size\":10,\"number_of_acting\":1}"
            interval_broadcasting_init_ballot:
              type: integer
              description: interval for broadcasting init ballot
              example: 1000000000
            interval_broadcasting_proposal:
              type: integer
              description: interval for broadcasting proposal
              example: 1000000000
            wait_broadcasting_accept_ballot:
              type: integer
              description: wait time for broadcasting accept ballot
              example: 1000000000
            interval_broadcasting_accept_ballot:
              type: integer
              description: interval for broadcasting accept ballot
              example: 1000000000
            timespan_valid_ballot:
              type: integer
              description: timespan for valid ballot
              example: 60000000000
            threshold:
              type: integer
              description: minimum threshold of agreement for new block
              example: 67
            max_operations_in_seal:
              type: integer
              description: maximum number of operations in one seal
              example: 100
            max_operations_in_proposal:
              type: integer
              description: maximum number of operations in one proposal
              example: 100
        suffrage:
          type: array
          items:
            $ref: '#/components/schemas/Suffrage'

    Manifest:
      type: object
      required:
      - _hint
      - hash
      - height
      - round
      - proposal
      - previous_block
      - block_operations
      - block_states
      - confirmed_at
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: block-manifest-v0.0.1
              example: block-manifest-v0.0.1
        hash:
          type: string
          format: hash
          description: hash block
          example: CHboAfLXbm7kFsr2JhdrJb2Qg4WL96YmK8E6t1NPABeB
        height:
          $ref: '#/components/schemas/Height'
        round:
          type: integer
          format: int64
          example: 0
        proposal:
          type: string
          description: hash of proposal ballot
          example: DPZsPTmgDGkRJXwoQYm1ZbNaNLRva5Cz8ZNJKuaoZNqX
        previous_block:
          type: string
          description: hash of previous block
          example: Gzsv15iXxrJFbbqdCJw7wGLzdbB9HpoSJrEyA2cTcMjw
        block_operations:
          type: string
          description: root hash of operation tree
          example: Yksv15iXxrJFbbqdCJw7wGLzdbB9HpoSJrEyA2cTcMjj
        block_states:
          type: string
          description: root hash of states tree
          example: Aksv15iXxrJFbbqdCJw7wGLzdbB9HpoSJrEyA2cTcMjj
        confirmed_at:
          type: string
          format: date-time
          description: confirmed time of block
          example: "2020-10-13T15:04:50Z"
        created_at:
          type: string
          format: date-time
          description: saved time in node
          example: "2020-10-14T00:04:51Z"

    Height:
      description: >-
        height of *block*.
      type: integer
      format: int64

    AccountKey:
      description: >-
        *publickey* and *weight* to access account.
      type: object
      required:
      - _hint
      - key
      - weight
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-key-v0.0.1
              example: mitum-currency-key-v0.0.1
        key:
          description: >-
            *publickey*
          type: string
          format: publickey
          example: bvdEGTsfaG6W3esdY9PjgjrsariGkhU1i3krVWzPaHtY:btc-pub-v0.0.1
        weight:
          description: >-
            *weight* should be `> 1` and  `<= 100`.
          type: integer
          format: int32
          example: 100

    AccountKeys:
      description: >-
        *AccountKey*s and *threshold* of the account. *AccountKeys* authorizes *operation* to modify
        the state of account if the *FactSign* of operation have the enough signs of *AccountKeys*.

        - Multiple *AccountKey* can be defined and at least, one *AccountKey* should be defined.

        - The sum of *weight* of *AccountKey*s should be over *threshold*.


        For example, if there are 3 *AccountKey* and *threshold* is `60`,

        - `key0`:
          * publickey: `key0-pub`
          * weight: `30`

        - `key1`:
          * publickey: `key1-pub`
          * weight: `30`

        - `key2`:
          * publickey: `key2-pub`
          * weight: `30`

        The *FactSign* of the operation consists with signs of `key0` and `key1`. In this
        *FactSign*, the sum of *weight* is `60` and is same or over *threshold*, `sum=60 >=
        threshold=60`, so this *FactSign* authorizes the operation.
      type: object
      required:
      - _hint
      - keys
      - threshold
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-keys-v0.0.1
              example: mitum-currency-keys-v0.0.1
        hash:
          type: string
          format: hash
          example: yAbsevAtgHBT6BXoxJmL2nPveqd1B6kKp2dfAxnoVb1
        keys:
          type: array
          items:
            $ref: '#/components/schemas/AccountKey'
        threshold:
          description: >-
            *threshold* should be `> 0` and `<= 100`.
          type: integer
          format: int32
          example: 100

    Account:
      type: object
      required:
      - _hint
      - hash
      - address
      - keys
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-account-v0.0.1
              example: mitum-currency-account-v0.0.1
        hash:
          type: string
          format: hash
          description: hash account
          example: CkNB7yu1YbAU5c8LFRV6HbFiuj9azQ3LCwuTuxMREbkd
        address:
          allOf:
            - $ref: '#/components/schemas/AccountAddress'
            - description: account address
            - type: string
              example: Bu9tSW5zdFwzeAgnCLUWV8ensutagkPB4qxJDr7K87WX:mca-v0.0.1
        keys:
          type: object
          properties:
            keys:
              type: array
              items:
                type: object
                properties:
                  _hint:
                    allOf:
                      - $ref: '#/components/schemas/Hint'
                      - type: string
                        default: mitum-currency-key-v0.0.1
                        example: mitum-currency-key-v0.0.1
                  weight:
                    type: integer
                    format: int32
                    example: 100
                  key:
                    type: string
                    example: 04b96826d72457a38aa9a2298c3f435f655c28a7d8e94b4e3adf772ac11e3101cbecf9e755312f8a61bd565c182f0d9d67d24f1590ddd2fef1d0af126b5bdfa5a7:ether-pub-v0.0.1
            threshold:
              type: integer
              format: int32
              example: 100

    ManifestHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: block-manifest-v0.0.1
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/244/manifest
                next:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/245/manifest
                alternate:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/CHboAfLXbm7kFsr2JhdrJb2Qg4WL96YmK8E6t1NPABeB/manifest
                block:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/244
                block:{height}:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          default: /block/{height:[0-9]+}
                          example: /block/{height:[0-9]+}
                        templated:
                          type: boolean
                          default: true
                          example: true
                manifest:{height}:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          default: /block/{height:[0-9]+}/manifest
                          example: /block/{height:[0-9]+}/manifest
                        templated:
                          type: boolean
                          default: true
                          example: true
                block:{hash}:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          default: /block/{hash:(?i)[0-9a-z][0-9a-z]+}
                          example: /block/{hash:(?i)[0-9a-z][0-9a-z]+}
                        templated:
                          type: boolean
                          default: true
                          example: true
                manifest:{hash}:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          default: /block/{hash:(?i)[0-9a-z][0-9a-z]+}/manifest
                          example: /block/{hash:(?i)[0-9a-z][0-9a-z]+}/manifest
                        templated:
                          type: boolean
                          default: true
                          example: true
            _embedded:
              $ref: '#/components/schemas/Manifest'

    AccountHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            hint:
              allOf:
                - $ref: '#components/schemas/Hint'
                - type: string
                  example: mitum-currency-account-value-v0.0.1
            _embedded:
              $ref: '#/components/schemas/AccountValue'
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /account/B5ev8dDUpAdkCUnm8N2RQwUM86kcCLQqhCBd78FTxhtv:mca-v0.0.1
                operations:
                  description: >-
                    *operation*s, which are related of the account.
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /account/B5ev8dDUpAdkCUnm8N2RQwUM86kcCLQqhCBd78FTxhtv:mca-v0.0.1/operations
                operations:{offset}:
                  description: >-
                    *operation*s, which are related of the account after offset.
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /account/B5ev8dDUpAdkCUnm8N2RQwUM86kcCLQqhCBd78FTxhtv:mca-v0.0.1/operations?offset={offset}
                        templated:
                          type: boolean
                          default: true
                          example: true
                operations:{offset,reverse}:
                  description: >-
                    *operation*s, which are related of the account after offset by reverse order.
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /account/B5ev8dDUpAdkCUnm8N2RQwUM86kcCLQqhCBd78FTxhtv:mca-v0.0.1/operations?offset={offset}&reverse=1
                        templated:
                          type: boolean
                          default: true
                          example: true
                block:
                  description: >-
                    Request `/block/{height}`.
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/244
                previous_block:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/97

    FactSign:
      description: >-
        *FactSign* represents the *signer* signs the *operation* with valid *hash* of *operation*.
      type: object
      required:
      - _hint
      - signer
      - signature
      - signed_at
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              example: base-fact-sign-v0.0.1
              default: base-fact-sign-v0.0.1
        signer:
          description: >-
            *publickey*, which signs the operation
          type: string
          format: publickey
          example: 232wjFmeNToVKHkREnyABRnbiVcPKxNdUCpxwVa2WybMJ:btc-pub-v0.0.1
        signature:
          description: signature, created by *signer*. Usually it is encoded thru *base58*.
          type: string
          format: signature
          example: 381yXYxTiM58cWArYyvbJ3cQsBr8HkKhmZzG3yBWjMgCZDRMWiBS4czsXazA9jJLQQ3Y7MStTs7WmkVh69zamhHTcRWTX3F5
        signed_at:
          description: time to be signed
          type: string
          format: date-time
          example: "2021-08-27T06:50:06.609Z"

    BaseFact:
      type: object
      required:
      - _hint
      - hash
      - token
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-create-accounts-operation-fact-v0.0.1
              example: mitum-currency-create-accounts-operation-fact-v0.0.1
        hash:
          type: string
          format: hash
          example: 4jhzcudKgtoPGR6rA7Fuxmfwz3C8KGiP5MEKXuBXcW9j
        token:
          type: string
          format: bytes
          example: cmFpc2VkIGJ5

    Operation:
      type: object
      required:
      - _hint
      - fact_signs
      - hash
      - fact
      - memo
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: a008:0.0.1
              example: a008:0.0.1
        fact_signs:
          type: array
          items:
            $ref: '#/components/schemas/FactSign'
        hash:
          description: operation hash
          type: string
          format: hash
          example: 9yiimPVZ2YaCwkmoDQ1xXuAJwnAj8kg9b6eshzRk7ro3
        fact:
          type: object
          required:
          - _hint
          - hash
          - token
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  default: a008:0.0.1
                  example: a008:0.0.1
            hash:
              description: operation fact hash
              type: string
              format: hash
              example: 9u4ua32jnYjS1BP8jBoL2BYqSwdZTno8vd4NzujbZQbH
            token:
              type: string
              format: bytes
              example: cmFpc2VkIGJ5
        memo:
          type: string
          example: "show me and find me"

    OperationHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-operation-value-v0.0.1
            _embedded:
              $ref: '#/components/schemas/OperationValue'
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/operation/6GymxmuvhgUfAKWYQUKKveYh1H8b981vQaZcMsbWqykS
                block:
                  description: request `/block/{height}` of the operation
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/244
                manifest:
                  description: request `/block/{height}/manifest` of the operation
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/244/manifest


    AccountOperationsHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            _embedded:
              type: array
              items:
                $ref: '#/components/schemas/OperationHAL'
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /account/B5ev8dDUpAdkCUnm8N2RQwUM86kcCLQqhCBd78FTxhtv:mca-v0.0.1/operations
                account:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /account/B5ev8dDUpAdkCUnm8N2RQwUM86kcCLQqhCBd78FTxhtv:mca-v0.0.1
                next:
                  description: >-
                    next operations with *offset*.
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /account/B5ev8dDUpAdkCUnm8N2RQwUM86kcCLQqhCBd78FTxhtv:mca-v0.0.1/operations?offset=2,0
                reverse:
                  description: >-
                    operations by reverse oder of self.
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /account/B5ev8dDUpAdkCUnm8N2RQwUM86kcCLQqhCBd78FTxhtv:mca-v0.0.1/operations?reverse=1

    ManifestsHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            _embedded:
              type: array
              items:
                $ref: '#/components/schemas/ManifestHAL'
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/manifests
                next:
                  description: >-
                    next manifests with *offset*.
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/manifests?offset=2
                reverse:
                  description: >-
                    manifests by reverse oder of self.
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/manifests?reverse=1

    OperationsHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            _embedded:
              type: array
              items:
                $ref: '#/components/schemas/OperationHAL'
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/operations
                next:
                  description: >-
                    next operations with *offset*.
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/operations?offset=2,0
                reverse:
                  description: >-
                    operations by reverse oder of self.
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/operations?reverse=1

    OperationsByHeightHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            _embedded:
              type: array
              items:
                $ref: '#/components/schemas/OperationHAL'
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/254/operations
                next:
                  description: >-
                    next operations with *offset*.
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/254/operations?offset=0
                reverse:
                  description: >-
                    operations by reverse oder of self.
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/254/operations?reverse=1

    OperationBuilderHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /builder/operation
                operation-fact:{create-accounts}:
                  description: >-
                    request the template of *create-accounts* operation.
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          default: /builder/operation/fact/template/create-accounts
                          example: /builder/operation/fact/template/create-accounts
                        templated:
                          type: boolean
                          default: true
                          example: true
                operation-fact:{key-updater}:
                  description: >-
                    request the template of *key-updater* operation.
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          default: /builder/operation/fact/template/key-updater
                          example: /builder/operation/fact/template/key-updater
                        templated:
                          type: boolean
                          default: true
                          example: true
                operation-fact:{transfers}:
                  description: >-
                    request the template of *transfers* operation.
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          default: /builder/operation/fact/template/transfers
                          example: /builder/operation/fact/template/transfers
                        templated:
                          type: boolean
                          default: true
                          example: true
                operation-fact:{currency-register}:
                  description: >-
                    request the template of *currency-register* operation.
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          default: /builder/operation/fact/template/currency-register
                          example: /builder/operation/fact/template/currency-register
                        templated:
                          type: boolean
                          default: true
                          example: true
                operation-fact:{currency-policy-updater}:
                  description: >-
                    request the template of *currency-policy-updater* operation.
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          default: /builder/operation/fact/template/currency-policy-updater
                          example: /builder/operation/fact/template/currency-policy-updater
                        templated:
                          type: boolean
                          default: true
                          example: true

    CreateAccounts:
      allOf:
        - $ref: '#/components/schemas/Operation'
        - type: object
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-create-accounts-operation-v0.0.1
            hash:
              type: string
              example: AJADCiBpkppv236vrRXzVVnUKoVDE2v6HvtTcZg3C2sF
            fact:
              $ref: '#/components/schemas/CreateAccountsFact'
    
    CreateAccountsSend:
      allOf:
        - $ref: '#/components/schemas/Operation'
        - type: object
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-create-accounts-operation-v0.0.1
            hash:
              type: string
              example: 7afVZcu9MQc2yXdN6soWYy7dDqoqhiT2LYWWQ7j6ak1E
            fact:
              $ref: '#/components/schemas/CreateAccountsFactSend'
            fact_signs:
              type: array
              items:
                $ref: '#/components/schemas/FactSignSeal'
            memo:
              type: string
              example: example

    KeyUpdater:
      allOf:
        - $ref: '#/components/schemas/Operation'
        - type: object
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-keyupdater-operation-v0.0.1
            fact:
              $ref: '#/components/schemas/KeyUpdaterFact'
    
    KeyUpdaterSend:
      allOf:
        - $ref: '#/components/schemas/Operation'
        - type: object
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-keyupdater-operation-v0.0.1
            hash:
              type: string
              format: hash
              example: GtubjX2yXSXMEDrjh6ge4QYe6DKqY8iLps1seM4qoZ5o
            fact:
              $ref: '#/components/schemas/KeyUpdaterFactSend'
            fact_signs:
              type: array
              items:
                $ref: '#/components/schemas/FactSignKeyUpdater'
            memo:
              type: string
              example: example
    
    KeyUpdaterFactSend:
      allOf:
        - $ref: '#/components/schemas/BaseFact'
        - type: object
          required:
          - _hint
          - hash
          - token
          - target
          - keys
          - currency
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-keyupdater-operation-fact-v0.0.1
                  default: mitum-currency-keyupdater-operation-fact-v0.0.1
            hash:
              description: >-
                The value of hash will be generated automatically by builder. *Don't need to edit*.
              type: string
              format: hash
              example: HANW4bzawtPZEKNLKfJy9ZX2BcKF4XUjnN9t2AUqDRa4
            token:
              description: >-
                Replace your own token. *token* value should be encoded by base64.
              type: string
              format: bytes
              example: MjAyMS0wOC0zMVQwNToxNzowOC4xMDA5MTAzNDda
            target:
              allOf:
                - $ref: '#/components/schemas/AccountAddress'
                - description: Replace your own account owner address.
                - type: string
                  example: H6cTzwGDPk1CcPH7uHHrfivAeHBKgLrS81JDvBfPXWhD:mca-v0.0.1
            keys:
              $ref: '#/components/schemas/AccountKeysKeyUpdater'
            currency:
              allOf:
                - $ref: '#/components/schemas/CurrencyID'
    
    AccountKeysKeyUpdater:
      type: object
      required:
      - _hint
      - keys
      - threshold
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-keys-v0.0.1
              example: mitum-currency-keys-v0.0.1
        hash:
          type: string
          format: hash
          example: 4roMiuuT2oWZfi8ycuytjcAPCj7LwsYbdJ6HpYmXxdym
        keys:
          type: array
          items:
            $ref: '#/components/schemas/AccountKeyKeyUpdater'
        threshold:
          description: >-
            *threshold* should be `> 0` and `<= 100`.
          type: integer
          format: int32
          example: 100
          
    AccountKeyKeyUpdater:
      type: object
      required:
      - _hint
      - key
      - weight
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-key-v0.0.1
              example: mitum-currency-key-v0.0.1
        key:
          description: >-
            *publickey*
          type: string
          format: publickey
          example: 29sLdVLiFHreGUEXUvMi4nKddVBp9C1BeyHSfgoWuzw1W:btc-pub-v0.0.1
        weight:
          description: >-
            *weight* should be `> 1` and  `<= 100`.
          type: integer
          format: int32
          example: 100   

    FactSignKeyUpdater:
      type: object
      required:
      - _hint
      - signer
      - signature
      - signed_at
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              example: base-fact-sign-v0.0.1
              default: base-fact-sign-v0.0.1
        signer:
          description: >-
            *publickey*, which signs the operation
          type: string
          format: publickey
          example: qcN6bdUDFs1nYWEVL41vNB5795UbxkHRmKNY35xVR3YM:btc-pub-v0.0.1
        signature:
          description: signature, created by *signer*. Usually it is encoded thru *base58*.
          type: string
          format: signature
          example: 381yXZ8PNoCLs4zrXxcebcdBtXQRbtRo32NaNpkMf9eokEiZZvPbVK8o731KCKVtugxUD2JewQx69dstKtXU2hjLmSpk2tLF
        signed_at:
          description: time to be signed
          type: string
          format: date-time
          example: "2021-08-31T05:17:08.101294142Z"

    Transfers:
      allOf:
        - $ref: '#/components/schemas/Operation'
        - type: object
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-transfers-operation-v0.0.1
            fact:
              $ref: '#/components/schemas/TransfersFact'
    
    TransfersSend:
      allOf:
        - $ref: '#/components/schemas/Operation'
        - type: object
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-transfers-operation-v0.0.1
            hash:
              type: string
              format: hash
              example: 3tGsPFzA9nfmEHECWrjKzN65cHYZpnM54uJQSkb1mWT4
            fact:
              $ref: '#/components/schemas/TransfersFactSend'
            fact_signs:
              type: array
              items:
                $ref: '#/components/schemas/FactSignTransfers'
            memo:
              type: string
              example: example

    FactSignTransfers:
      type: object
      required:
      - _hint
      - signer
      - signature
      - signed_at
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              example: base-fact-sign-v0.0.1
              default: base-fact-sign-v0.0.1
        signer:
          description: >-
            *publickey*, which signs the operation
          type: string
          format: publickey
          example: qcN6bdUDFs1nYWEVL41vNB5795UbxkHRmKNY35xVR3YM:btc-pub-v0.0.1
        signature:
          description: signature, created by *signer*. Usually it is encoded thru *base58*.
          type: string
          format: signature
          example: AN1rKvsyiSus9JCktE6fuZo8uBjvf9U89qGLWYprSwWJ6FrUuL1q2smM6xrFAav3fLVLv6tnhpTCF7LvRa1QLmdYPrwmqzE9W
        signed_at:
          description: time to be signed
          type: string
          format: date-time
          example: "2021-08-31T05:27:32.050276077Z"      

    TransfersFactSend:
      allOf:
        - $ref: '#/components/schemas/BaseFact'
        - type: object
          required:
          - _hint
          - hash
          - token
          - sender
          - items
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-transfers-operation-fact-v0.0.1
                  default: mitum-currency-transfers-operation-fact-v0.0.1
            hash:
              description: >-
                The value of hash will be generated automatically by builder. *Don't need to edit*.
              type: string
              format: hash
              example: 2v7J7HEzn1EXpiaRaigkCxVLWzRK7XoHL3HqCbWx4jur
            token:
              description: >-
                Replace your own token. *token* value should be encoded by base64.
              type: string
              format: bytes
              example: MjAyMS0wOC0zMVQwNToyNzozMi4wNTAwNjU0NzFa
            sender:
              allOf:
                - $ref: '#/components/schemas/AccountAddress'
                - description: Replace your own sender address.
                - type: string
                  example: H6cTzwGDPk1CcPH7uHHrfivAeHBKgLrS81JDvBfPXWhD:mca-v0.0.1
            items:
              type: array
              items:
                type: object
                required:
                - receiver
                - amount
                properties:
                  _hint:
                    allOf:
                      - $ref: '#/components/schemas/Hint'
                      - type: string
                        example: mitum-currency-transfers-item-single-amount-v0.0.1
                  receiver:
                    allOf:
                      - $ref: '#/components/schemas/AccountAddress'
                      - description: Receiver account address.
                      - type: string
                        example: 4roMiuuT2oWZfi8ycuytjcAPCj7LwsYbdJ6HpYmXxdym:mca-v0.0.1
                  amounts:
                    type: array
                    items:
                      description: The amount to transfer.
                      allOf:
                        - $ref: '#/components/schemas/AmountTransfers'      

    AmountTransfers:
      type: object
      required:
      - _hint
      - hash
      - amount
      - currency
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-amount-v0.0.1
              example: mitum-currency-amount-v0.0.1
        amount:
          type: string
          description: amount
          example: "100"
          default: "100"
        currency:
          $ref: '#/components/schemas/CurrencyID'      
    
    CurrencyRegister:
      allOf:
        - $ref: '#/components/schemas/Operation'
        - type: object
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-currency-register-operation-v0.0.1
            fact:
              oneOf:
                - $ref: '#/components/schemas/CurrencyRegisterFactNil'
                - $ref: '#/components/schemas/CurrencyRegisterFactFixed'
                - $ref: '#/components/schemas/CurrencyRegisterFactRatio'

    CurrencyRegisterNil:
      allOf:
        - $ref: '#/components/schemas/Operation'
        - type: object
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-currency-register-operation-v0.0.1
            hash:
              type: string
              format: hash
              example: 3rDNBZtWJN79XfUGESU6nSFqwM4P5zHGM1ssd8KMpV7p
            fact:
              $ref: '#/components/schemas/CurrencyRegisterFactNil'
            fact_signs:
              type: array
              items:
                $ref: '#/components/schemas/FactSignCurrencyRegisterNil'
            memo:
              type: string
              example: example

    FactSignCurrencyRegisterNil:
      type: object
      required:
      - _hint
      - signer
      - signature
      - signed_at
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              example: base-fact-sign-v0.0.1
              default: base-fact-sign-v0.0.1
        signer:
          description: >-
            *publickey*, which signs the operation
          type: string
          format: publickey
          example: qcN6bdUDFs1nYWEVL41vNB5795UbxkHRmKNY35xVR3YM:btc-pub-v0.0.1
        signature:
          description: signature, created by *signer*. Usually it is encoded thru *base58*.
          type: string
          format: signature
          example: 381yXZVWGLXYZEDfYXwW7xUPmCpgzQDH8VHUnJS7RTxByW1NwVDe4Joyxj1whkd71di6aZMiAUjV76NPVwxZWLnmG88CiT3N
        signed_at:
          description: time to be signed
          type: string
          format: date-time
          example: "2021-08-31T05:39:32.649341546Z"   
              
    CurrencyRegisterFixed:
      allOf:
        - $ref: '#/components/schemas/Operation'
        - type: object
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-currency-register-operation-v0.0.1
            hash:
              type: string
              format: hash
              example: 3mAWZ1m2V8REA9Kh8RTrWBnhtATbGPncbkq2nE2aRLmz
            fact:
              $ref: '#/components/schemas/CurrencyRegisterFactFixed'
            fact_signs:
              type: array
              items:
                $ref: '#/components/schemas/FactSignCurrencyRegisterFixed'
            memo:
              type: string
              example: example

    FactSignCurrencyRegisterFixed:
      type: object
      required:
      - _hint
      - signer
      - signature
      - signed_at
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              example: base-fact-sign-v0.0.1
              default: base-fact-sign-v0.0.1
        signer:
          description: >-
            *publickey*, which signs the operation
          type: string
          format: publickey
          example: qcN6bdUDFs1nYWEVL41vNB5795UbxkHRmKNY35xVR3YM:btc-pub-v0.0.1
        signature:
          description: signature, created by *signer*. Usually it is encoded thru *base58*.
          type: string
          format: signature
          example: 381yXZ6ym3o5WY8q1wVWt2DeatGDVJFwWboQL5utsKbJqkFrHGoVPt5A6HuA7NAJjznmEvYeQaByNmuKjfvqy7GgoEGxHmXG
        signed_at:
          description: time to be signed
          type: string
          format: date-time
          example: "2021-08-31T06:00:48.485785875Z"     

    CurrencyRegisterRatio:
      allOf:
        - $ref: '#/components/schemas/Operation'
        - type: object
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-currency-register-operation-v0.0.1
            hash:
              type: string
              format: hash
              example: 4jys2knDproZKaidqQw2vumj6TfbxVznYL2EjvhGd1yc
            fact:
              $ref: '#/components/schemas/CurrencyRegisterFactRatio'
            fact_signs:
              type: array
              items:
                $ref: '#/components/schemas/FactSignCurrencyRegisterRatio'
            memo:
              type: string
              example: example

    FactSignCurrencyRegisterRatio:
      type: object
      required:
      - _hint
      - signer
      - signature
      - signed_at
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              example: base-fact-sign-v0.0.1
              default: base-fact-sign-v0.0.1
        signer:
          description: >-
            *publickey*, which signs the operation
          type: string
          format: publickey
          example: qcN6bdUDFs1nYWEVL41vNB5795UbxkHRmKNY35xVR3YM:btc-pub-v0.0.1
        signature:
          description: signature, created by *signer*. Usually it is encoded thru *base58*.
          type: string
          format: signature
          example: AN1rKvtgMuC1cNWmbTY72ZZaigQFaEYYqjMe9gsJznr7b9MPdjM1x3zqdNd8NU7WJGqJckAKb5TSWwYwaY6tZ3s7vMk1pTWQq
        signed_at:
          description: time to be signed
          type: string
          format: date-time
          example: "2021-08-31T06:09:54.631444603Z"     

    CurrencyPolicyUpdater:
      allOf:
        - $ref: '#/components/schemas/Operation'
        - type: object
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-currency-policy-updater-operation-v0.0.1
            fact:
              $ref: '#/components/schemas/CurrencyPolicyUpdaterFact'

    CurrencyPolicyUpdaterNil:
      allOf:
        - $ref: '#/components/schemas/Operation'
        - type: object
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-currency-policy-updater-operation-v0.0.1
            hash:
              type: string
              format: hash
              example: 4sKSMuirmNRvwULz8xbiCKvMwca3x5Yp7VWwn8tHwqmT
            fact_signs:
              type: array
              items:
                $ref: '#/components/schemas/FactSignPolicyUpdaterNil'
            fact:
              $ref: '#/components/schemas/CurrencyPolicyUpdaterFactNil'
            memo:
              type: string
              example: example

    FactSignPolicyUpdaterNil:
      type: object
      required:
      - _hint
      - signer
      - signature
      - signed_at
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              example: base-fact-sign-v0.0.1
              default: base-fact-sign-v0.0.1
        signer:
          description: >-
            *publickey*, which signs the operation
          type: string
          format: publickey
          example: qcN6bdUDFs1nYWEVL41vNB5795UbxkHRmKNY35xVR3YM:btc-pub-v0.0.1
        signature:
          description: signature, created by *signer*. Usually it is encoded thru *base58*.
          type: string
          format: signature
          example: 381yXYhHy2hTGraMych3SGzFw4NGo3qFWti7iBRUV1ZeRBSMnDwKWdEhpWpAzQmspnouAGVwtjUNvPfebVE6kYacPXY5y5bJ
        signed_at:
          description: time to be signed
          type: string
          format: date-time
          example: "2021-08-31T06:21:51.202215525Z"         

    CurrencyPolicyUpdaterFixed:
      allOf:
        - $ref: '#/components/schemas/Operation'
        - type: object
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-currency-policy-updater-operation-v0.0.1
            hash:
              type: string
              format: hash
              example: AUvhWccSW3E5HNRak1JAXDMgxkbg1qaBmiXYggj5xv5d
            fact_signs:
              type: array
              items:
                $ref: '#/components/schemas/FactSignPolicyUpdaterFixed'
            fact:
              $ref: '#/components/schemas/CurrencyPolicyUpdaterFactFixed'
            memo:
              type: string
              example: example

    FactSignPolicyUpdaterFixed:
      type: object
      required:
      - _hint
      - signer
      - signature
      - signed_at
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              example: base-fact-sign-v0.0.1
              default: base-fact-sign-v0.0.1
        signer:
          description: >-
            *publickey*, which signs the operation
          type: string
          format: publickey
          example: qcN6bdUDFs1nYWEVL41vNB5795UbxkHRmKNY35xVR3YM:btc-pub-v0.0.1
        signature:
          description: signature, created by *signer*. Usually it is encoded thru *base58*.
          type: string
          format: signature
          example: AN1rKvtfbyL69JFnukRWREdaTjAUh7ACVjnm9mYAnBQQ2NSgD8dv7VwEv5gxfVHxAMGT31GwZyhyeo5ysxNR6gWsZLniQuwdv
        signed_at:
          description: time to be signed
          type: string
          format: date-time
          example: "2021-08-31T06:28:04.671070581Z"  

    CurrencyPolicyUpdaterRatio:
      allOf:
        - $ref: '#/components/schemas/Operation'
        - type: object
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-currency-policy-updater-operation-v0.0.1
            hash:
              type: string
              format: hash
              example: CuJ3vvhYCdTHHDm4EsHin6t8bjm2wPFpHDHhE4N6UoaX
            fact_signs:
              type: array
              items:
                $ref: '#/components/schemas/FactSignPolicyUpdaterRatio'
            fact:
              $ref: '#/components/schemas/CurrencyPolicyUpdaterFactRatio'
            memo:
              type: string
              example: example

    FactSignPolicyUpdaterRatio:
      type: object
      required:
      - _hint
      - signer
      - signature
      - signed_at
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              example: base-fact-sign-v0.0.1
              default: base-fact-sign-v0.0.1
        signer:
          description: >-
            *publickey*, which signs the operation
          type: string
          format: publickey
          example: qcN6bdUDFs1nYWEVL41vNB5795UbxkHRmKNY35xVR3YM:btc-pub-v0.0.1
        signature:
          description: signature, created by *signer*. Usually it is encoded thru *base58*.
          type: string
          format: signature
          example: 381yXZKVvdGqtdMvBAbqgCPn8w37p4YCALMcq4TwGs6szHNA7ZkESFUpaYqTxYihbpZD5SZC5YobpEYnJG7W5Sx2Fcd9KLdd
        signed_at:
          description: time to be signed
          type: string
          format: date-time
          example: "2021-08-31T06:34:39.267499965Z" 

    CreateAccountsFact:
      allOf:
        - $ref: '#/components/schemas/BaseFact'
        - type: object
          required:
          - sender
          - items
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-create-accounts-operation-fact-v0.0.1
                  default: mitum-currency-create-accounts-operation-fact-v0.0.1
            hash:
              description: >-
                The value of hash will be generated automatically by builder. *Don't need to edit*.
              type: string
              format: hash
              example: AykBdbwB7jGGAxZmzHd1ymJFpMc8iBcozQxVAzkX5jj3
            token:
              description: >-
                Replace your own token. *token* value should be encoded by base64.
              type: string
              format: bytes
              example: MjAyMS0wOC0yN1QwNjo1MDowNi41OTZa
            sender:
              allOf:
                - $ref: '#/components/schemas/AccountAddress'
                - type: string
                  example: ETox5FKJFknprZv7iJk5KnKmqR9kz7fWTEWkHCaDkad3:mca-v0.0.1
            items:
              type: array
              items:
                type: object
                required:
                - _hint
                - keys
                - amount

                properties:
                  _hint:
                    allOf:
                      - $ref: '#/components/schemas/Hint'
                      - type: string
                        example: mitum-currency-create-accounts-single-amount-v0.0.1
                  keys:
                    $ref: '#/components/schemas/AccountKeys'
                  amounts:
                    type: array
                    items:
                      description: The initial balance of account.
                      allOf:
                        - $ref: '#/components/schemas/Amount'

    KeyUpdaterFact:
      allOf:
        - $ref: '#/components/schemas/BaseFact'
        - type: object
          required:
          - _hint
          - hash
          - token
          - target
          - keys
          - currency
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-keyupdater-operation-fact-v0.0.1
                  default: mitum-currency-keyupdater-operation-fact-v0.0.1
            hash:
              description: >-
                The value of hash will be generated automatically by builder. *Don't need to edit*.
              type: string
              format: hash
              example: 2TsuSVfu5eUEZnGxztyn3fWo5bHS1nu861wJReXajw4u
            token:
              description: >-
                Replace your own token. *token* value should be encoded by base64.
              type: string
              format: bytes
              example: cmFpc2VkIGJ5
            target:
              allOf:
                - $ref: '#/components/schemas/AccountAddress'
                - description: Replace your own account owner address.
            keys:
              $ref: '#/components/schemas/AccountKeys'
            currency:
              allOf:
                - $ref: '#/components/schemas/CurrencyID'

    TransfersFact:
      allOf:
        - $ref: '#/components/schemas/BaseFact'
        - type: object
          required:
          - _hint
          - hash
          - token
          - sender
          - items
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-transfers-operation-fact-v0.0.1
                  default: mitum-currency-transfers-operation-fact-v0.0.1
            hash:
              description: >-
                The value of hash will be generated automatically by builder. *Don't need to edit*.
              type: string
              format: hash
              example: 4jhzcudKgtoPGR6rA7Fuxmfwz3C8KGiP5MEKXuBXcW9j
            token:
              description: >-
                Replace your own token. *token* value should be encoded by base64.
              type: string
              format: bytes
              example: cmFpc2VkIGJ5
            sender:
              allOf:
                - $ref: '#/components/schemas/AccountAddress'
                - description: Replace your own sender address.
            items:
              type: array
              items:
                type: object
                required:
                - receiver
                - amount
                properties:
                  _hint:
                    allOf:
                      - $ref: '#/components/schemas/Hint'
                      - type: string
                        example: mitum-currency-transfers-item-single-amount-v0.0.1
                  receiver:
                    allOf:
                      - $ref: '#/components/schemas/AccountAddress'
                      - description: Receiver account address.
                  amounts:
                    type: array
                    items:
                      description: The amount to transfer.
                      allOf:
                        - $ref: '#/components/schemas/Amount'

    CurrencyRegisterFact:
      allOf:
        - $ref: '#/components/schemas/BaseFact'
        - type: object
          required:
          - _hint
          - hash
          - token
          - currency
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-currency-register-operation-fact-v0.0.1
                  default: mitum-currency-currency-register-operation-fact-v0.0.1
            hash:
              description: >-
                The value of hash will be generated automatically by builder. *Don't need to edit*.
              type: string
              format: hash
              example: 4jhzcudKgtoPGR6rA7Fuxmfwz3C8KGiP5MEKXuBXcW9j
            token:
              description: >-
                Replace your own token. *token* value should be encoded by base64.
              type: string
              format: bytes
              example: cmFpc2VkIGJ5
            currency:
              allOf:
                - $ref: '#/components/schemas/CurrencyDesign'

    CurrencyRegisterFactNil:
      allOf:
        - $ref: '#/components/schemas/BaseFact'
        - type: object
          required:
          - _hint
          - hash
          - token
          - currency
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-currency-register-operation-fact-v0.0.1
                  default: mitum-currency-currency-register-operation-fact-v0.0.1
            hash:
              description: >-
                The value of hash will be generated automatically by builder. *Don't need to edit*.
              type: string
              format: hash
              example: 6sdxntdSSsXEKKSZaV2FCNkYQHKKLYDWbwbbMgvq7tAa
            token:
              description: >-
                Replace your own token. *token* value should be encoded by base64.
              type: string
              format: bytes
              example: MjAyMS0wOC0zMVQwNTozOTozMi42NDkxMzk2MzFa
            currency:
              allOf:
                - $ref: '#/components/schemas/CurrencyDesignRegisterNil'

    CurrencyDesignRegisterNil:
      type: object
      required:
      - _hint
      - amount
      - genesis_account
      - policy
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-currency-design-v0.0.1
              example: mitum-currency-currency-design-v0.0.1
        amount:
          $ref: '#/components/schemas/AmountRegister'
        genesis_account:
          allOf:
            - $ref: '#/components/schemas/AccountAddress'
            - description: genesis account address, which will hold genesis balance
            - type: string
              example: H6cTzwGDPk1CcPH7uHHrfivAeHBKgLrS81JDvBfPXWhD:mca-v0.0.1
        policy:
          $ref: '#/components/schemas/CurrencyPolicyRegisterNil'

    CurrencyPolicyRegisterNil:
      description: currency policy
      type: object
      required:
      - _hint
      - new_account_min_balance
      - feeer
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-currency-policy-v0.0.1
              example: mitum-currency-currency-policy-v0.0.1
        new_account_min_balance:
          type: string
          example: "100"
        feeer:
          $ref: '#/components/schemas/NilFeeer'
      
    AmountRegister:
      type: object
      required:
      - _hint
      - hash
      - amount
      - currency
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-amount-v0.0.1
              example: mitum-currency-amount-v0.0.1
        amount:
          type: string
          description: amount
          example: "10000"
          default: "10000"
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyID'
            - type: string
              example: ABC   

    CurrencyRegisterFactFixed:
      allOf:
        - $ref: '#/components/schemas/BaseFact'
        - type: object
          required:
          - _hint
          - hash
          - token
          - currency
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-currency-register-operation-fact-v0.0.1
                  default: mitum-currency-currency-register-operation-fact-v0.0.1
            hash:
              description: >-
                The value of hash will be generated automatically by builder. *Don't need to edit*.
              type: string
              format: hash
              example: Hw7QtYaQt9JZTeXVKxDGXyhcKcKvXK4vhcTQqvoLKZGz
            token:
              description: >-
                Replace your own token. *token* value should be encoded by base64.
              type: string
              format: bytes
              example: MjAyMS0wOC0zMVQwNjowMDo0OC40ODU1NjQzNTda
            currency:
              allOf:
                - $ref: '#/components/schemas/CurrencyDesignRegisterFixed'      

    CurrencyDesignRegisterFixed:
      type: object
      required:
      - _hint
      - amount
      - genesis_account
      - policy
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-currency-design-v0.0.1
              example: mitum-currency-currency-design-v0.0.1
        amount:
          $ref: '#/components/schemas/AmountRegister'
        genesis_account:
          allOf:
            - $ref: '#/components/schemas/AccountAddress'
            - description: genesis account address, which will hold genesis balance
            - type: string
              example: H6cTzwGDPk1CcPH7uHHrfivAeHBKgLrS81JDvBfPXWhD:mca-v0.0.1
        policy:
          $ref: '#/components/schemas/CurrencyPolicyRegisterFixed'     

    CurrencyPolicyRegisterFixed:
      description: currency policy
      type: object
      required:
      - _hint
      - new_account_min_balance
      - feeer
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-currency-policy-v0.0.1
              example: mitum-currency-currency-policy-v0.0.1
        new_account_min_balance:
          type: string
          example: "100"
        feeer:
          allOf:
            - $ref: '#/components/schemas/FixedFeeer'
            - type: object
              properties:
                receiver:
                  type: string
                  example: H6cTzwGDPk1CcPH7uHHrfivAeHBKgLrS81JDvBfPXWhD:mca-v0.0.1

    CurrencyRegisterFactRatio:
      allOf:
        - $ref: '#/components/schemas/BaseFact'
        - type: object
          required:
          - _hint
          - hash
          - token
          - currency
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-currency-register-operation-fact-v0.0.1
                  default: mitum-currency-currency-register-operation-fact-v0.0.1
            hash:
              description: >-
                The value of hash will be generated automatically by builder. *Don't need to edit*.
              type: string
              format: hash
              example: 3AGJyfwopdjGeN1aGtsJ6zhQyyKpczPDG6ixa6NKaWEZ
            token:
              description: >-
                Replace your own token. *token* value should be encoded by base64.
              type: string
              format: bytes
              example: MjAyMS0wOC0zMVQwNjowOTo1NC42MjExNjM4MTda
            currency:
              allOf:
                - $ref: '#/components/schemas/CurrencyDesignRegisterRatio'

    CurrencyDesignRegisterRatio:
      type: object
      required:
      - _hint
      - amount
      - genesis_account
      - policy
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-currency-design-v0.0.1
              example: mitum-currency-currency-design-v0.0.1
        amount:
          $ref: '#/components/schemas/AmountRegister'
        genesis_account:
          allOf:
            - $ref: '#/components/schemas/AccountAddress'
            - description: genesis account address, which will hold genesis balance
            - type: string
              example: H6cTzwGDPk1CcPH7uHHrfivAeHBKgLrS81JDvBfPXWhD:mca-v0.0.1
        policy:
          $ref: '#/components/schemas/CurrencyPolicyRegisterRatio'
          
    CurrencyPolicyRegisterRatio:
      description: currency policy
      type: object
      required:
      - _hint
      - new_account_min_balance
      - feeer
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-currency-policy-v0.0.1
              example: mitum-currency-currency-policy-v0.0.1
        new_account_min_balance:
          type: string
          example: "100"
        feeer:
          allOf:
            - $ref: '#/components/schemas/RatioFeeer'
            - type: object
              properties:
                receiver:
                  type: string
                  example: H6cTzwGDPk1CcPH7uHHrfivAeHBKgLrS81JDvBfPXWhD:mca-v0.0.1    

    CurrencyPolicyUpdaterFact:
      allOf:
        - $ref: '#/components/schemas/BaseFact'
        - type: object
          required:
          - _hint
          - hash
          - token
          - currency
          - policy
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-currency-policy-updater-operation-fact-v0.0.1
                  default: mitum-currency-currency-policy-updater-operation-fact-v0.0.1
            hash:
              description: >-
                The value of hash will be generated automatically by builder. *Don't need to edit*.
              type: string
              format: hash
              example: 4jhzcudKgtoPGR6rA7Fuxmfwz3C8KGiP5MEKXuBXcW9j
            token:
              description: >-
                Replace your own token. *token* value should be encoded by base64.
              type: string
              format: bytes
              example: cmFpc2VkIGJ5
            currency:
              allOf:
                - $ref: '#/components/schemas/CurrencyID'
            policy:
              allOf:
                - $ref: '#/components/schemas/CurrencyPolicy'

    CurrencyPolicyUpdaterFactNil:
      allOf:
        - $ref: '#/components/schemas/BaseFact'
        - type: object
          required:
          - _hint
          - hash
          - token
          - currency
          - policy
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-currency-policy-updater-operation-fact-v0.0.1
                  default: mitum-currency-currency-policy-updater-operation-fact-v0.0.1
            hash:
              description: >-
                The value of hash will be generated automatically by builder. *Don't need to edit*.
              type: string
              format: hash
              example: DMzk8EjkPEcdRtvQYea5bR7QAeQFij3hoQoYT64ZUDYB
            token:
              description: >-
                Replace your own token. *token* value should be encoded by base64.
              type: string
              format: bytes
              example: MjAyMS0wOC0zMVQwNjoyMTo1MS4yMDIwNDkyNzVa
            currency:
              type: string
              example: ABC
            policy:
              allOf:
                - $ref: '#/components/schemas/CurrencyPolicyPolicyUpdaterNil'

    CurrencyPolicyPolicyUpdaterNil:
      description: currency policy
      type: object
      required:
      - _hint
      - new_account_min_balance
      - feeer
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-currency-policy-v0.0.1
              example: mitum-currency-currency-policy-v0.0.1
        new_account_min_balance:
          type: string
          example: "100"
        feeer:
          $ref: '#/components/schemas/NilFeeer'


    CurrencyPolicyUpdaterFactFixed:
      allOf:
        - $ref: '#/components/schemas/BaseFact'
        - type: object
          required:
          - _hint
          - hash
          - token
          - currency
          - policy
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-currency-policy-updater-operation-fact-v0.0.1
                  default: mitum-currency-currency-policy-updater-operation-fact-v0.0.1
            hash:
              description: >-
                The value of hash will be generated automatically by builder. *Don't need to edit*.
              type: string
              format: hash
              example: F79Boebg3pcP59P2u5vtfmg8Sbdm9qgNA7TdQbXpY3ZJ
            token:
              description: >-
                Replace your own token. *token* value should be encoded by base64.
              type: string
              format: bytes
              example: MjAyMS0wOC0zMVQwNjoyODowNC42NzA5NDEyMjha
            currency:
              type: string
              example: ABC
            policy:
              allOf:
                - $ref: '#/components/schemas/CurrencyPolicyPolicyUpdaterFixed'

    CurrencyPolicyPolicyUpdaterFixed:
      description: currency policy
      type: object
      required:
      - _hint
      - new_account_min_balance
      - feeer
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-currency-policy-v0.0.1
              example: mitum-currency-currency-policy-v0.0.1
        new_account_min_balance:
          type: string
          example: "100"
        feeer:
          allOf:
            - $ref: '#/components/schemas/FixedFeeer'
            - type: object
              properties:
                receiver:
                  type: string
                  example: H6cTzwGDPk1CcPH7uHHrfivAeHBKgLrS81JDvBfPXWhD:mca-v0.0.1

    CurrencyPolicyUpdaterFactRatio:
      allOf:
        - $ref: '#/components/schemas/BaseFact'
        - type: object
          required:
          - _hint
          - hash
          - token
          - currency
          - policy
          properties:
            _hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-currency-policy-updater-operation-fact-v0.0.1
                  default: mitum-currency-currency-policy-updater-operation-fact-v0.0.1
            hash:
              description: >-
                The value of hash will be generated automatically by builder. *Don't need to edit*.
              type: string
              format: hash
              example: D7hWpCjz3cXEVo52eqrqLWsyvFqtitGr5F9xbB2rTXyP
            token:
              description: >-
                Replace your own token. *token* value should be encoded by base64.
              type: string
              format: bytes
              example: MjAyMS0wOC0zMVQwNjozNDozOS4yNjcwMjI3NTla
            currency:
              type: string
              example: ABC
            policy:
              allOf:
                - $ref: '#/components/schemas/CurrencyPolicyPolicyUpdaterRatio'

    CurrencyPolicyPolicyUpdaterRatio:
      description: currency policy
      type: object
      required:
      - _hint
      - new_account_min_balance
      - feeer
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-currency-policy-v0.0.1
              example: mitum-currency-currency-policy-v0.0.1
        new_account_min_balance:
          type: string
          example: "100"
        feeer:
          allOf:
            - $ref: '#/components/schemas/RatioFeeer'
            - type: object
              properties:
                receiver:
                  type: string
                  example: H6cTzwGDPk1CcPH7uHHrfivAeHBKgLrS81JDvBfPXWhD:mca-v0.0.1

    OperationTemplateCreateAccountsFactHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-create-accounts-operation-fact-v0.0.1
            _embedded:
              $ref: '#/components/schemas/CreateAccountsFact'
            _extras:
              type: object
              required:
              - default
              properties:
                default:
                  description: >-
                    Simply new fact can be generated by replacing the default value by your own values.
                  type: object
                  properties:
                    token:
                      description: >
                        *base64* encoded **example** bytes
                      type: string
                      example: cmFpc2VkIGJ5
                    sender:
                      allOf:
                        - $ref: '#/components/schemas/AccountAddress'
                        - description: >
                            **example** sender *address*
                    items.keys.keys.key:
                      description: >
                        **example** new account *publickey*
                      type: string
                      format: publickey
                      example: "oRHdEPPrgbfNxUp6TWsC35DmWu1zbLCW9rp41Z8npF8H:btc-pub-v0.0.1"
                    currency:
                      description: >
                        **example** new account initial currency
                      $ref: '#/components/schemas/CurrencyID'
                    items.big:
                      description: >
                        **example** amount of items
                      type: string
                      example: "-333"
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /builder/operation/fact/template/create-accounts
                          default: /builder/operation/fact/template/create-accounts

    OperationTemplateKeyUpdaterFactHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            hint:
              type: object
              properties:
                name:
                  type: string
                  default: mitum-currency-keyupdater-operation-fact
                  example: mitum-currency-keyupdater-operation-fact
                hint:
                  type: string
                  default: mitum-currency-keyupdater-operation-fact-v0.0.1
                  example: mitum-currency-keyupdater-operation-fact-v0.0.1
            _embedded:
              $ref: '#/components/schemas/KeyUpdaterFact'
            _extras:
              type: object
              required:
              - default
              properties:
                default:
                  description: >-
                    Simply new fact can be generated by replacing the default value by your own values.
                  type: object
                  properties:
                    token:
                      description: >-
                        *base64* encoded **example** bytes
                      type: string
                      example: cmFpc2VkIGJ5
                    target:
                      allOf:
                        - $ref: '#/components/schemas/AccountAddress'
                        - description: >
                            **example** key owner *address*
                    keys.keys.key:
                      description: >-
                        **example** new account *publickey*
                      type: string
                      format: publickey
                      example: "oRHdEPPrgbfNxUp6TWsC35DmWu1zbLCW9rp41Z8npF8H:btc-pub-v0.0.1"
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /builder/operation/fact/template/key-updater
                          default: /builder/operation/fact/template/key-updater

    OperationTemplateTransfersFactHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            hint:
              type: object
              properties:
                name:
                  type: string
                  default: mitum-currency-transfers-operation-fact
                  example: mitum-currency-transfers-operation-fact
                hint:
                  type: string
                  default: mitum-currency-transfers-operation-fact-v0.0.1
                  example: mitum-currency-transfers-operation-fact-v0.0.1
            _embedded:
              $ref: '#/components/schemas/TransfersFact'
            _extras:
              type: object
              required:
              - default
              properties:
                default:
                  description: >-
                    Simply new fact can be generated by replacing the default value by your own values.
                  type: object
                  properties:
                    token:
                      description: >-
                        *base64* encoded **example** bytes
                      type: string
                      example: cmFpc2VkIGJ5
                    sender:
                      allOf:
                        - $ref: '#/components/schemas/AccountAddress'
                        - description: >
                            **example** sender *address*
                    items.receiver:
                      allOf:
                        - $ref: '#/components/schemas/AccountAddress'
                        - description: >
                            **example** receiver address
                    items.amount:
                      description: >-
                        **example** amount to transfer
                      type: string
                      example: "-333"
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /builder/operation/fact/template/transfers
                          default: /builder/operation/fact/template/transfers

    OperationTemplateCurrencyRegisterFactHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            hint:
              type: object
              properties:
                name:
                  type: string
                  default: mitum-currency-currency-register-operation-fact
                  example: mitum-currency-currency-register-operation-fact
                hint:
                  type: string
                  default: mitum-currency-currency-register-operation-fact-v0.0.1
                  example: mitum-currency-currency-register-operation-fact-v0.0.1
            _embedded:
              $ref: '#/components/schemas/CurrencyRegisterFact'
            _extras:
              type: object
              required:
              - default
              properties:
                default:
                  description: >-
                    Simply new fact can be generated by replacing the default value by your own values.
                  type: object
                  properties:
                    token:
                      description: >-
                        *base64* encoded **example** bytes
                      type: string
                      example: cmFpc2VkIGJ5
                    currency:
                      allOf:
                        - $ref: '#/components/schemas/CurrencyDesign'
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /builder/operation/fact/template/currency-register
                          default: /builder/operation/fact/template/currency-register

    OperationTemplateCurrencyPolicyUpdaterFactHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            hint:
              type: object
              properties:
                name:
                  type: string
                  default: mitum-currency-currency-policy-updater-operation-fact
                  example: mitum-currency-currency-policy-updater-operation-fact
                hint:
                  type: string
                  default: mitum-currency-currency-policy-updater-operation-fact-v0.0.1
                  example: mitum-currency-currency-policy-updater-operation-fact-v0.0.1
            _embedded:
              $ref: '#/components/schemas/CurrencyPolicyUpdaterFact'
            _extras:
              type: object
              required:
              - default
              properties:
                default:
                  description: >-
                    Simply new fact can be generated by replacing the default value by your own values.
                  type: object
                  properties:
                    token:
                      description: >-
                        *base64* encoded **example** bytes
                      type: string
                      example: cmFpc2VkIGJ5
                    currency:
                      allOf:
                        - $ref: '#/components/schemas/CurrencyID'
                    policy:
                      allOf:
                        - $ref: '#/components/schemas/CurrencyPolicy'
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /builder/operation/fact/template/currency-policy-updater
                          default: /builder/operation/fact/template/currency-policy-updater

    OperationTemplateCreateAccountsHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-create-accounts-operation-v0.0.1
            _embedded:
              allOf:
                - $ref: '#/components/schemas/Operation'
                - type: object
                  properties:
                    _hint:
                      allOf:
                        - $ref: '#/components/schemas/Hint'
                        - type: string
                          example: mitum-currency-create-accounts-operation-v0.0.1
                    fact:
                      $ref: '#/components/schemas/CreateAccountsFact'
            _extras:
              type: object
              required:
              - default
              properties:
                default:
                  description: >-
                    Simply new operation can be generated by replacing the default value by your own values.
                  type: object
                  properties:
                    fact_signs.signer:
                      description: >-
                        **example** *publickey* for signing
                      type: string
                      format: publickey
                      example: "oRHdEPPrgbfNxUp6TWsC35DmWu1zbLCW9rp41Z8npF8H:btc-pub-v0.0.1"
                    fact_signs.signature:
                      description: >-
                        **example** signature
                      type: string
                      format: signature
                      example: "22UZo26eN"
                signature_base:
                  description: >-
                    Bytes for creating *signature*. *base64* encoded string.
                  type: string
                  format: signature
                  example: "M1d82nkxHCooJq1ktIkd09MHgj3sSL8/7d4KYSNv1s1tYzsgVGh1IDEwIFNlcCAyMDIwIDAzOjIzOjMxIFBNIFVUQw=="
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /builder/operation/fact
                          default: /builder/operation/fact

    SealHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: seal-v0.0.1
            _embedded:
              $ref: '#/components/schemas/Seal'
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: " "
                          default: " "
                operation:0:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /block/operation/AykBdbwB7jGGAxZmzHd1ymJFpMc8iBcozQxVAzkX5jj3
                          default: /block/operation/AykBdbwB7jGGAxZmzHd1ymJFpMc8iBcozQxVAzkX5jj3

    OperationTemplateCreateAccountsSignHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-create-accounts-operation-v0.0.1
            _embedded:
              allOf:
                - $ref: '#/components/schemas/Operation'
                - type: object
                  properties:
                    _hint:
                      allOf:
                        - $ref: '#/components/schemas/Hint'
                        - type: string
                          example: mitum-currency-create-accounts-operation-v0.0.1
                    fact:
                      $ref: '#/components/schemas/CreateAccountsFact'
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          example: /builder/operation/sign
                          default: /builder/operation/sign


    CurrenciesHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          default: /currency
                          example: /currency
                currency:MCC:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          default: /currency/MCC
                          example: /currency/MCC
                currency:{currency_id}:
                  allOf:
                    - $ref: '#/components/schemas/HALLink'
                    - type: object
                      properties:
                        href:
                          type: string
                          default: /currency/{currencyid:.*}
                          example: /currency/{currencyid:.*}
                        templated:
                          type: boolean
                          default: true
                          example: true

    CurrencyHAL:
      allOf:
        - $ref: '#/components/schemas/HAL'
        - type: object
          properties:
             hint:
              allOf:
                - $ref: '#/components/schemas/Hint'
                - type: string
                  example: mitum-currency-currency-design-v0.0.1
             _embedded:
                $ref: '#/components/schemas/CurrencyDesign'
             _links:
                type: object
                properties:
                  self:
                    allOf:
                      - $ref: '#/components/schemas/HALLink'
                      - type: object
                        properties:
                          href:
                            type: string
                            default: /currency/MCC
                            example: /currency/MCC
                  operations:
                    allOf:
                      - $ref: '#/components/schemas/HALLink'
                      - type: object
                        properties:
                          href:
                            type: string
                            default: /block/operation/Bu9tSW5zdFwzeAgnCLUWV8ensutagkPB4qxJDr7K87WX
                            example: /block/operation/Bu9tSW5zdFwzeAgnCLUWV8ensutagkPB4qxJDr7K87WX
                  block:
                    allOf:
                      - $ref: '#/components/schemas/HALLink'
                      - type: object
                        properties:
                          href:
                            type: string
                            default: /block/0
                            example: /block/0
                  currency:{currencyid}:
                    allOf:
                      - $ref: '#/components/schemas/HALLink'
                      - type: object
                        properties:
                          href:
                            type: string
                            default: /currency/{currencyid:.*}
                            example: /currency/{currencyid:.*}
                          templated:
                            type: boolean
                            default: true
                            example: true

    CurrencyID:
      description: currency unique id(or name)
      type: string
      example: MCC

    AccountValue:
      allOf:
        - $ref: '#/components/schemas/Account'
        - type: object
          required:
          - balance
          - height
          - previous_height
          properties:
            balance:
              $ref: '#/components/schemas/Amount'
            height:
              $ref: '#/components/schemas/Height'
            previous_height:
              $ref: '#/components/schemas/Height'

    OperationValue:
      type: object
      required:
      - _hint
      - hash
      - operation
      - height
      - confirmed_at
      - reason
      - in_state
      - index
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              example: mitum-currency-operation-value-v0.0.1
              default: mitum-currency-operation-value-v0.0.1
        hash:
          description: operation value hash, not operation hash
          type: string
          format: hash
          example: 6GymxmuvhgUfAKWYQUKKveYh1H8b981vQaZcMsbWqykS
        operation:
          oneOf:
            - $ref: '#/components/schemas/CreateAccounts'
            - $ref: '#/components/schemas/KeyUpdater'
            - $ref: '#/components/schemas/Transfers'
            - $ref: '#/components/schemas/CurrencyRegister'
            - $ref: '#/components/schemas/CurrencyPolicyUpdater'
        height:
          $ref: '#/components/schemas/Height'
        confirmed_at:
          type: string
          format: date-time
          example: "2020-10-13T14:37:20Z"
        in_state:
          description: Whether the operation is in block or not. If `false`, the operation is processed, but ignored with it's own problem.
          type: boolean
          example: true
        reason:
          $ref: '#/components/schemas/ReasonError'
          description: It describes the rejected reason of operation.
        index:
          type: integer
          default: 0
          example: 0

    CurrencyDesign:
      type: object
      required:
      - _hint
      - amount
      - genesis_account
      - policy
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-currency-design-v0.0.1
              example: mitum-currency-currency-design-v0.0.1
        amount:
          $ref: '#/components/schemas/Amount'
        genesis_account:
          allOf:
            - $ref: '#/components/schemas/AccountAddress'
            - description: genesis account address, which will hold genesis balance
        policy:
          $ref: '#/components/schemas/CurrencyPolicy'

    Amount:
      type: object
      required:
      - _hint
      - hash
      - amount
      - currency
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-amount-v0.0.1
              example: mitum-currency-amount-v0.0.1
        amount:
          type: string
          description: amount
          example: "100"
          default: "100"
        currency:
          $ref: '#/components/schemas/CurrencyID'

    CurrencyPolicy:
      description: currency policy
      type: object
      required:
      - _hint
      - new_account_min_balance
      - feeer
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-currency-policy-v0.0.1
              example: mitum-currency-currency-policy-v0.0.1
        new_account_min_balance:
          type: string
          example: "33"
        feeer:
          description: fee policy
          type: object
          oneOf:
            - $ref: '#/components/schemas/NilFeeer'
            - $ref: '#/components/schemas/FixedFeeer'
            - $ref: '#/components/schemas/RatioFeeer'

    NilFeeer:
      description: fee policy, which does not charge fee
      type: object
      required:
      - _hint
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-nil-feeer-v0.0.1
              example: mitum-currency-nil-feeer-v0.0.1
        type:
          type: string
          example: 'nil'
          default: 'nil'

    FixedFeeer:
      description: fee policy, which does charge fixed amount
      type: object
      required:
      - _hint
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-fixed-feeer-v0.0.1
              example: mitum-currency-fixed-feeer-v0.0.1
        type:
          type: string
          example: 'fixed'
          default: 'fixed'
        receiver:
          allOf:
            - $ref: '#/components/schemas/AccountAddress'
            - description: account address for receiving collected fee
        amount:
          type: string
          default: "33"
          example: "33"

    RatioFeeer:
      description: fee policy, which does charge fee by transfer amount
      type: object
      required:
      - _hint
      properties:
        _hint:
          allOf:
            - $ref: '#/components/schemas/Hint'
            - type: string
              default: mitum-currency-ratio-feeer-v0.0.1
              example: mitum-currency-ratio-feeer-v0.0.1
        type:
          type: string
          example: 'ratio'
          default: 'ratio'
        receiver:
          allOf:
            - $ref: '#/components/schemas/AccountAddress'
            - description: account address for receiving collected fee
        ratio:
          type: float
          default: 0.1
          example: 0.1
        min:
          type: string
          default: "1"
          example: "1"
        max:
          type: string
          default: "10"
          example: "10"

    NodeAddress:
      description: node address
      type: string
      example: 'n1:sa-v0.0.1'

    AccountAddress:
      description: account address
      type: string
      example: 'mc-node:mca-v0.0.1'

    ReasonError:
      type: object
      required:
        - msg
      properties:
        msg:
          description: reason message
          type: string
          example: 'insufficient balance'
        data:
          description: additional data
          type: object

# vi: ft=yaml tw=100 ts=2 sw=2 expandtab smarttab
